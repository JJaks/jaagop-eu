on:
  pull_request:
    types: [opened, synchronize]

name: Build, test, and deploy

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
      # we build a dev binary for use in CI so skip downloading
      # canary next-swc binaries in the monorepo
      NEXT_SKIP_NATIVE_POSTINSTALL: 1
    outputs:
      docsChange: ${{ steps.docs-change.outputs.DOCS_CHANGE }}
      isRelease: ${{ steps.check-release.outputs.IS_RELEASE }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 25

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - run: git pull
      - run: yarn install --frozen-lockfile --check-files
      - run: node run-tests.js --timings --write-timings -g 1/1
      - name: Check docs only change
        run: echo ::set-output name=DOCS_CHANGE::$(node skip-docs-change.js echo 'not-docs-only-change')
        id: docs-change
      - run: echo ${{steps.docs-change.outputs.DOCS_CHANGE}}
      - run: git pull
      - run: git describe
      - id: check-release
        run: |
          if [[ $(git describe --exact-match 2> /dev/null || :) = v* ]];
            then
              echo "::set-output name=IS_RELEASE::true"
            else
              echo "::set-output name=IS_RELEASE::false"
          fi
      - uses: actions/cache@v2
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: ./scripts/check-manifests.js
      - run: yarn lint

  checkPrecompiled:
    name: Check Pre-compiled
    runs-on: ubuntu-latest
    needs: build
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/checkout@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: mv .git .git-bak
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: rm -rf .git && mv .git-bak .git
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: ./scripts/check-pre-compiled.sh
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - uses: EndBug/add-and-commit@v7
        if: ${{ failure() }}
        with:
          add: 'packages/next/compiled packages/next/bundles --force'
          message: 'âš™ Update compiled files'

  testUnit:
    name: Test Unit
    runs-on: ubuntu-latest
    needs: [build, build-native-dev]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/download-artifact@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        with:
          name: next-swc-dev-binary
          path: packages/next/native

      - run: node run-tests.js --type unit
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testDev:
    name: Test Development
    runs-on: ubuntu-latest
    needs: [build, build-native-dev]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    steps:
      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/download-artifact@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        with:
          name: next-swc-dev-binary
          path: packages/next/native

      - run: npm i -g playwright-chromium@1.14.1 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      # TODO: remove after we fix watchpack watching too much
      - run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: node run-tests.js --type development
        name: Run test/development
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: NEXT_TEST_MODE=dev node run-tests.js --type e2e
        name: Run test/e2e (dev)
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - name: Upload test trace
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-trace
          if-no-files-found: ignore
          retention-days: 2
          path: |
            test/traces

  testProd:
    name: Test Production
    runs-on: ubuntu-latest
    needs: [build, build-native-dev]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    steps:
      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/download-artifact@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        with:
          name: next-swc-dev-binary
          path: packages/next/native

      - run: npm i -g playwright-chromium@1.14.1 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      # TODO: remove after we fix watchpack watching too much
      - run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: node run-tests.js --type production
        name: Run test/production
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: NEXT_TEST_MODE=start node run-tests.js --type e2e
        name: Run test/e2e (production)
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testIntegration:
    name: Test Integration
    runs-on: ubuntu-latest
    needs: [build, build-native-dev]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      TEST_TIMINGS_TOKEN: ${{ secrets.TEST_TIMINGS_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5, 6]
    steps:
      - run: echo ${{needs.build.outputs.docsChange}}

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/download-artifact@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        with:
          name: next-swc-dev-binary
          path: packages/next/native

      - run: npm i -g playwright-chromium@1.14.1 && npx playwright install-deps
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      # TODO: remove after we fix watchpack watching too much
      - run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: xvfb-run node run-tests.js --timings -g ${{ matrix.group }}/6
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - name: Upload test trace
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-trace
          if-no-files-found: ignore
          retention-days: 2
          path: |
            test/traces

  testsPass:
    name: thank you, next
    runs-on: ubuntu-latest
    needs:
      [
        lint,
        checkPrecompiled,
        testIntegration,
        testUnit,
        testDev,
        testProd,
      ]
    steps:
      - run: exit 0

  testFirefox:
    name: Test Firefox (production)
    runs-on: ubuntu-latest
    needs: [build, build-native-dev]
    env:
      BROWSER_NAME: 'firefox'
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: actions/download-artifact@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        with:
          name: next-swc-dev-binary
          path: packages/next/native
      - run: npx playwright install-deps && npx playwright install firefox
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
      - run: node run-tests.js test/integration/production/test/index.test.js
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testSafari:
    name: Test Safari (production)
    runs-on: ubuntu-latest
    needs: [build, build-native-dev]
    env:
      BROWSERSTACK: true
      BROWSER_NAME: 'safari'
      NEXT_TELEMETRY_DISABLED: 1
      SKIP_LOCAL_SELENIUM_SERVER: true
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
    steps:
      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/download-artifact@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        with:
          name: next-swc-dev-binary
          path: packages/next/native

      # TODO: use macos runner so that we can use playwright to test against
      # PRs instead of only running on canary?
      - run: '[[ -z "$BROWSERSTACK_ACCESS_KEY" ]] && echo "Skipping for PR" || npm i -g browserstack-local@1.4.0'
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: '[[ -z "$BROWSERSTACK_ACCESS_KEY" ]] && echo "Skipping for PR" || node run-tests.js -c 1 test/integration/production/test/index.test.js'
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testSafariOld:
    name: Test Safari 10.1 (nav)
    runs-on: ubuntu-latest
    needs: [build, testSafari, build-native-dev]
    env:
      BROWSERSTACK: true
      LEGACY_SAFARI: true
      BROWSER_NAME: 'safari'
      NEXT_TELEMETRY_DISABLED: 1
      SKIP_LOCAL_SELENIUM_SERVER: true
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
    steps:
      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/download-artifact@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        with:
          name: next-swc-dev-binary
          path: packages/next/native

      - run: '[[ -z "$BROWSERSTACK_ACCESS_KEY" ]] && echo "Skipping for PR" || npm i -g browserstack-local@1.4.0'
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: '[[ -z "$BROWSERSTACK_ACCESS_KEY" ]] && echo "Skipping for PR" || node run-tests.js test/integration/production-nav/test/index.test.js'
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testFirefoxNode17:
    name: Test Firefox Node.js 17
    runs-on: ubuntu-latest
    needs: [build, testFirefox, build-native-dev]
    env:
      BROWSER_NAME: 'firefox'
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Setup node
        uses: actions/setup-node@v2
        if: ${{ steps.docs-change.outputs.docsChange != 'docs only change' }}
        with:
          node-version: 17
          check-latest: true
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: actions/download-artifact@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        with:
          name: next-swc-dev-binary
          path: packages/next/native
      - run: npx playwright install-deps && npx playwright install firefox
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
      - run: node run-tests.js test/integration/production/test/index.test.js
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  build-native-dev:
    name: Build dev binary for tests
    runs-on: ubuntu-18.04
    steps:
      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/checkout@v2
        with:
          fetch-depth: 25

      - run: echo ::set-output name=DOCS_CHANGE::$(node skip-docs-change.js echo 'not-docs-only-change')
        id: docs-change

      - name: Setup node
        uses: actions/setup-node@v2
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE != 'docs only change' }}
        with:
          node-version: 14
          check-latest: true

      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE != 'docs only change' }}
        with:
          profile: minimal
          toolchain: nightly-2021-08-12

      - name: Cache cargo registry
        uses: actions/cache@v1
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE != 'docs only change' }}
        with:
          path: ~/.cargo/registry
          key: stable-ubuntu-18.04-node@14-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE != 'docs only change' }}
        with:
          path: ~/.cargo/git
          key: stable-ubuntu-18.04-node@14-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache native binary
        id: binary-cache
        uses: actions/cache@v2
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE != 'docs only change' }}
        with:
          path: packages/next/native/next-swc.linux-x64-gnu.node
          key: dev-next-swc-nightly-2021-08-12-linux-x64-gnu-${{ hashFiles('.github/workflows/build_test_deploy.yml', 'packages/next/build/swc/**') }}

      # We use restore-key to pick latest cache.
      # We will not get exact match, but doc says
      # "If there are multiple partial matches for a restore key, the action returns the most recently created cache."
      # So we get latest cache
      - name: Cache built files
        uses: actions/cache@v2
        with:
          path: ./packages/next/build/swc/target
          key: next-swc-cargo-cache-ubuntu-18.04--${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            next-swc-cargo-cache-ubuntu-18.04
      # since the repo's dependencies aren't installed we need
      # to install napi globally
      - run: npm i -g @napi-rs/cli@1.2.1

      - name: Build
        if: ${{ steps.binary-cache.outputs.cache-hit != 'true' && steps.docs-change.outputs.DOCS_CHANGE != 'docs only change' }}
        run: yarn build-native
        env:
          MACOSX_DEPLOYMENT_TARGET: '10.13'
        working-directory: packages/next

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: next-swc-dev-binary
          path: packages/next/native/next-swc.linux-x64-gnu.node

      - name: Clear the cargo caches
        if: ${{ steps.docs-change.outputs.DOCS_CHANGE != 'docs only change' }}
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
